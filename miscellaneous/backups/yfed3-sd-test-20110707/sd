<?php

/**
 * Entrypoint for Yahoo! Search Sd Ajax requests.
 *
 * @package gsp2_project_web
 * @author Julien Lecomte <jlecomte@yahoo-inc.com>
 */

$START_TIME = microtime(true);
$PEAR_PATH = '/home/y/share/pear/Yahoo';
$GSP2_PATH = $PEAR_PATH . '/GSP2';
$PACKAGE_DIR = '/home/y/share/gsp2/projects/web';

#debug "gsp_apd_trace" apd_set_pprof_trace();

/*debug "gsp_benchmark"
  require($GSP2_PATH . '/Core/Benchmark.php');
  $yprofiler = YBenchmark_Profiler::initialize();
  $yprofiler->setQuiet(true);
debug*/

yahoo_strict_set_error(E_WARNING);

#debug "gsp_benchmark" $yprofiler->enterSection('File Inclusion Phase');

/* Include GSP2 core components */
require($GSP2_PATH . '/Core/Class.php');
require($GSP2_PATH . '/Core/ClassUtils.php');
require($GSP2_PATH . '/Core/Debug.php');
require($GSP2_PATH . '/Core/DebugHTML.php');
require($GSP2_PATH . '/Core/Log.php');
require($GSP2_PATH . '/Core/ProviderBase.php');
require($GSP2_PATH . '/Core/ProviderList.php');
require($GSP2_PATH . '/Core/Result.php');
require($GSP2_PATH . '/Core/Skin.php');
require($GSP2_PATH . '/Core/Transformator.php');
require($GSP2_PATH . '/Core/Array.php');
require($GSP2_PATH . '/Core/Content.php');

/* Include GSP2 Utilities */
require($GSP2_PATH . '/Util/Configuration.php');
require($GSP2_PATH . '/Util/Query.php');
require($GSP2_PATH . '/Util/Strings.php');
require($GSP2_PATH . '/Util/Urls.php');
require($GSP2_PATH . '/DataModel/DataModel.php');
require($GSP2_PATH . '/DataModel/PageModel.php');
require($GSP2_PATH . '/DataModel/DispatchModel.php');
require($GSP2_PATH . '/DataModel/Manipulators/Query.php');
require($GSP2_PATH . '/DataModel/Manipulators/CurlDispatch.php');
require($GSP2_PATH . '/DataModel/Manipulators/YFed2Dispatch.php');
require($GSP2_PATH . '/DispatchLayers/YFed2.php');
#debug "gsp_benchmark" require($GSP2_PATH . '/DataModel/Manipulators/Benchmark.php');

/* Providers */
require($GSP2_PATH . '/Providers/Base/SearchHistory.php');
require($GSP2_PATH . '/Web/providers/URSA.php');
require($GSP2_PATH . '/Web/providers/IY.php');

/* Include Project DM/Manipulators */
require($GSP2_PATH . '/Web/datamodel/Web.php');
require($GSP2_PATH . '/Web/datamodel/Meta.php');
require($GSP2_PATH . '/Web/datamodel/Skin.php');
require($GSP2_PATH . '/Web/datamodel/Urls.php');
require($GSP2_PATH . '/Web/datamodel/LogModel.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Presentation.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/YST.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Bucket.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Configuration.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Debug.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Encoding.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Env.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Logging.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Meta.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Query.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/Urls.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/YFed2Dispatch.php');

/* Include URSA Shortcut Manipulators */
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulator.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorSportsPlayer.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorSportsTeam.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorNewsWow.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorSuperNewsWow.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorFreshNewsWow.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorSingleProductWow.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorProductsWow.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorTVShow.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorWeather.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorTravel.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorFinance.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorLocalSingleBiz.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorMoviesTrailer.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorMoviesShowtime.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorMoviesLocation.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorMusic.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorAppSearch.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorDapper.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorNews.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorQuicklinks.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorCohort.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorTopClick.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorCelebrity.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorNoSuggestion.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorHoroscope.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura/URAShortcutManipulatorRecipes.php');

/* Entry-Point Children or "base" manipulators */
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/common.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/ura.php');
require($GSP2_PATH . '/Web/datamodel/manipulators/entry/sd/skin_override.php');

/* TODO: Include Project Configurators */
require($GSP2_PATH . '/Web/datamodel/configurators/URSA.php');

#debug "gsp_benchmark" $yprofiler->leaveSection('File Inclusion Phase');

//
// define the query map for this entrypoint
//
$SINGLE_URL        = array('input_type' => GSPQueryAnalyzer::INPUT_TYPE_URL,        'data_type' => GSPQueryAnalyzer::DATA_TYPE_SINGLE);
$SINGLE_UNSAFE_RAW = array('input_type' => GSPQueryAnalyzer::INPUT_TYPE_UNSAFE_RAW, 'data_type' => GSPQueryAnalyzer::DATA_TYPE_SINGLE);
$SINGLE_NUMBER     = array('input_type' => GSPQueryAnalyzer::INPUT_TYPE_NUMBER,     'data_type' => GSPQueryAnalyzer::DATA_TYPE_SINGLE);
$SINGLE_STRIPPED   = array('input_type' => GSPQueryAnalyzer::INPUT_TYPE_STRIPPED,   'data_type' => GSPQueryAnalyzer::DATA_TYPE_SINGLE);
$ARRAY_STRIPPED    = array('input_type' => GSPQueryAnalyzer::INPUT_TYPE_STRIPPED,   'data_type' => GSPQueryAnalyzer::DATA_TYPE_ARRAY);

$_query_map = array(

    // search query
    'p' => $SINGLE_UNSAFE_RAW,

    // output type: "jsonp-html" (default) or "html"
    'o' => $SINGLE_STRIPPED,

    // name of JavaScript callback
    'cb' => $SINGLE_STRIPPED,

    // cb alias
    'callback' => $SINGLE_STRIPPED,

    // Maximum number of Gossip suggestions to display
    'n' => $SINGLE_NUMBER,

    // indicates whether styles should be sent along in the JSON response
    'css' => $SINGLE_NUMBER,

    // "from" parameter, for tracking, revsharing
    'fr' => $SINGLE_STRIPPED,

    // second "from" parameter for tracking query origin
    'fr2' => $SINGLE_STRIPPED,

    // page view id of the page that hosts the rich assistance widget.
    'csrcpvid' => $SINGLE_STRIPPED,

    // rich assistance "session view id" (= id of the first page view in that session)
    'srcpvid' => $SINGLE_STRIPPED,

    // Client ID. This could be used to serve different content to different
    // clients of different versions of the same client library.
    'clid' => $SINGLE_STRIPPED,

    // Origin. Used to separate traffic per property.
    'origin' => $SINGLE_STRIPPED,

    // Vertical. Used to generate different target URLs for Gossip suggestions.
    'vert' => $SINGLE_STRIPPED,

    // Internal Options: Must be in ynet DB
    // debug: Activate one or more GSPDebugThunks
    'debug' => $ARRAY_STRIPPED,

    //-- Parameters used in buckets -------------------------------------------

    // Disable YSM ads.
    'noads' => $SINGLE_STRIPPED,

    // __ip: IP to masquerade from
    '__ip' => $SINGLE_STRIPPED,

    // __cluster: cluster type
    '__cluster' => $SINGLE_STRIPPED,

    // __country: Country to masquerade from
    '__country' => $SINGLE_STRIPPED,

    // Disable Search History
    'sh_off' => $SINGLE_STRIPPED,

    // Delete a specified search history suggestion
    'sh_qry' => $SINGLE_STRIPPED,

    // XSS protection
    '_bcrumb' => $SINGLE_STRIPPED + array('urlarg' => GSPQueryAnalyzer::URLARG_NEVER),

    // Dynamic workflow switch required for the URSA project (bgp means "bypass Gossip")
    // If set, bypass Gossip and send the query term directly to the NRTI backend.
    // Otherwise, invoke Gossip and use the first suggestion as the query term sent to the NRTI backend.
    'bgp' => $SINGLE_STRIPPED,

    // Display popular now suggestions
    'popnow' => $SINGLE_STRIPPED,

    // we want to preserve type accross the whole SRP
    'type' => $SINGLE_STRIPPED,

    // docid (from gossip, for triggering shortcuts in the URSA BE)
    'd' => $SINGLE_STRIPPED,

    // rt (from gossip, for triggering shortcuts in the URSA BE)
    'rt' => $SINGLE_STRIPPED,

    // sid (Space id that can be set via url parameter)
    'sid' => $SINGLE_STRIPPED,

    // woeid (WOEID needs to be sent to the BE for local DDs)
    'w' => $SINGLE_STRIPPED,

    // rnd (Random number sent to sd entry point. Need to be returned back for comscore.)
    'rnd' => $SINGLE_STRIPPED,
);

unset($SINGLE_URL, $SINGLE_UNSAFE_RAW, $SINGLE_NUMBER, $SINGLE_STRIPPED, $ARRAY_STRIPPED);

/* Include files for this prototype */
require($GSP2_PATH . '/DataModel/YFedWorkflowFactory.php');
require($GSP2_PATH . '/Test/YFed3_SearchDirect/manipulators.php');

//
// set up the factory and blank data model
//


$_DATA = new Web_DataModel;
$_dfactory = new YFedWorkflowFactory($_DATA);

//
// register manipulators
//
$_dfactory->register('debug_err',           new Web_DebugManipulator_ErrorHandling);
$_dfactory->register('env_vars',            new Web_EnvManipulator_EnvVariables);
$_dfactory->register('encoding_in',         new Web_EncodingManipulator_Input);
$_dfactory->register('query',               new Web_QueryManipulator($_query_map));
$_dfactory->register('env_internal',        new Web_EnvManipulator_Internal);
$_dfactory->register('meta_basic',          new Web_MetaManipulator_Construct('sd', 'Web_MetaModel_Sd'));
$_dfactory->register('bucket_select',       new Web_BucketSelection_Manipulator_Sd);
$_dfactory->register('conf',                new Web_ConfigManipulator_Search($PACKAGE_DIR));
$_dfactory->register('spaceid',             new Web_SpaceIdManipulator_Sd);
$_dfactory->register('meta_inter',          new Web_MetaManipulator_InterInit);
$_dfactory->register('bucket_model',        new Web_BucketModel_Manipulator_Sd);
$_dfactory->register('skin_init',           new Web_SkinInitialization($GSP2_PATH, 'sd'));
$_dfactory->register('bucket',              new Web_BucketManipulator_Sd);
$_dfactory->register('logmodel',            new Web_LogModelManipulator_Sd);
$_dfactory->register('env_useragent',       new Web_EnvManipulator_UserAgent);
$_dfactory->register('urls',                new Web_UrlsManipulator($_query_map));
$_dfactory->register('debug_ana',           new Web_DebugManipulator_SetupAnalyzer);
$_dfactory->register('encoding_out',        new Web_EncodingManipulator_Output);
$_dfactory->register('meta_full',           new Web_MetaManipulator_FullInit);

$_dfactory->registerDispatcher('ursa_dispatch', new URSA_Dispatcher, array('query', 'meta_basic', 'bucket_select', 'conf'));

$_dfactory->register('highlight_present',   new Web_PresentManip_Highlight);
$_dfactory->register('assist_present',      new Web_PresentManip_Sd_URA, array('ursa_dispatch'));
$_dfactory->register('skin',                new Web_SkinPresentation, array('assist_present'));

// Removed the remaining manipulators b/c of too many errors
// related to the hacky way we extract data in this prototype.

//
// get the ball rolling...
//
$_dfactory->run();

$DURATION = (microtime(true) - $START_TIME) * 1000;
// echo "$DURATION msec";
